#!/bin/bash

# WPST Panel - WordPress Stack Tool Installer
# Phi√™n b·∫£n: 1.0.0
# T√°c gi·∫£: WPST Team

set -e

# Trap function ƒë·ªÉ handle l·ªói
error_handler() {
    local line_num=$1
    local exit_code=$?
    echo -e "${RED}[L·ªñI]${NC} Script b·ªã l·ªói t·∫°i d√≤ng $line_num (exit code: $exit_code)" >&2
    echo -e "${RED}[L·ªñI]${NC} Qu√° tr√¨nh c√†i ƒë·∫∑t b·ªã gi√°n ƒëo·∫°n." >&2
    
    # Hi·ªÉn th·ªã th√™m th√¥ng tin debug n·∫øu c·∫ßn
    if [[ $exit_code -ne 0 ]]; then
        echo -e "${YELLOW}[DEBUG]${NC} L·ªánh cu·ªëi c√πng th·∫•t b·∫°i v·ªõi exit code: $exit_code" >&2
    fi
    
    exit 1
}

trap 'error_handler ${LINENO}' ERR

# M√†u s·∫Øc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Bi·∫øn to√†n c·ª•c
WPST_DIR="/opt/wpst"
SITES_DIR="/var/www"
LOG_FILE="/tmp/wpst-install.log"
MARIADB_VERSION="11.8"

# Functions
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

error() {
    echo -e "${RED}[L·ªñI]${NC} $1" | tee -a "$LOG_FILE"
    exit 1
}

warning() {
    echo -e "${YELLOW}[C·∫¢NH B√ÅO]${NC} $1" | tee -a "$LOG_FILE"
}

info() {
    echo -e "${BLUE}[TH√îNG TIN]${NC} $1" | tee -a "$LOG_FILE"
}

success() {
    echo -e "${GREEN}[TH√ÄNH C√îNG]${NC} $1" | tee -a "$LOG_FILE"
}

progress() {
    echo -e "${CYAN}[TI·∫æN TR√åNH]${NC} $1" | tee -a "$LOG_FILE"
}

# Ki·ªÉm tra quy·ªÅn root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "Script n√†y c·∫ßn ch·∫°y v·ªõi quy·ªÅn root. Vui l√≤ng ch·∫°y: sudo $0"
    fi
}

# Detect OS v√† Architecture
detect_system() {
    log "ƒêang ph√°t hi·ªán h·ªá ƒëi·ªÅu h√†nh..."
    
    # Detect OS
    if [[ -f /etc/debian_version ]]; then
        OS="debian"
        if grep -q "Ubuntu" /etc/os-release; then
            OS_NAME="Ubuntu"
            OS_VERSION=$(grep "VERSION_ID" /etc/os-release | cut -d'"' -f2)
        else
            OS_NAME="Debian"
            OS_VERSION=$(cat /etc/debian_version)
        fi
        PKG_MANAGER="apt"
    else
        error "H·ªá ƒëi·ªÅu h√†nh kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£. Ch·ªâ h·ªó tr·ª£ Debian/Ubuntu."
    fi
    
    # Detect Architecture
    ARCH=$(uname -m)
    case $ARCH in
        x86_64)
            ARCH_NAME="amd64"
            ;;
        aarch64)
            ARCH_NAME="arm64"
            ;;
        *)
            error "Ki·∫øn tr√∫c CPU kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£: $ARCH"
            ;;
    esac
    
    info "H·ªá ƒëi·ªÅu h√†nh: $OS_NAME $OS_VERSION ($OS)"
    info "Ki·∫øn tr√∫c: $ARCH ($ARCH_NAME)"
    info "Tr√¨nh qu·∫£n l√Ω g√≥i: $PKG_MANAGER"
}

# Bi·∫øn to√†n c·ª•c cho warnings
SERVER_WARNINGS=()

# Function ƒë·ªÉ ki·ªÉm tra v√† x·ª≠ l√Ω l·ªói
check_error() {
    local exit_code=$?
    if [[ $exit_code -ne 0 ]]; then
        echo -e "${RED}[L·ªñI]${NC} L·ªánh th·∫•t b·∫°i v·ªõi exit code: $exit_code" >&2
        return $exit_code
    fi
    return 0
}

# Ki·ªÉm tra server hi·ªán t·∫°i
check_server_status() {
    log "Ki·ªÉm tra tr·∫°ng th√°i server..."
    
    local conflicts=()
    SERVER_WARNINGS=()
    
    # Ki·ªÉm tra FrankenPHP
    if command -v frankenphp >/dev/null 2>&1; then
        local fp_version=$(frankenphp version 2>/dev/null | head -1 || echo "Unknown")
        SERVER_WARNINGS+=("FrankenPHP ƒë√£ c√†i ƒë·∫∑t: $fp_version (s·∫Ω c√†i ƒë√®)")
    fi
    
    # Ki·ªÉm tra MariaDB/MySQL
    if command -v mysql >/dev/null 2>&1 || command -v mariadb >/dev/null 2>&1; then
        conflicts+=("MariaDB/MySQL ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t")
    fi
    
    # Ki·ªÉm tra th∆∞ m·ª•c WPST
    if [[ -d "$WPST_DIR" ]]; then
        SERVER_WARNINGS+=("Th∆∞ m·ª•c WPST ƒë√£ t·ªìn t·∫°i: $WPST_DIR (s·∫Ω ghi ƒë√®)")
    fi
    
    # Ki·ªÉm tra k·∫øt n·ªëi internet
    if ! ping -c 1 8.8.8.8 >/dev/null 2>&1; then
        conflicts+=("Kh√¥ng c√≥ k·∫øt n·ªëi internet")
    fi
    
    # Ki·ªÉm tra dung l∆∞·ª£ng ƒëƒ©a (t·ªëi thi·ªÉu 2GB)
    AVAILABLE_SPACE=$(df / | awk 'NR==2 {print $4}')
    if [[ $AVAILABLE_SPACE -lt 2097152 ]]; then # 2GB in KB
        conflicts+=("C·∫ßn √≠t nh·∫•t 2GB dung l∆∞·ª£ng tr·ªëng. Hi·ªán t·∫°i ch·ªâ c√≥ $(($AVAILABLE_SPACE/1024/1024))GB")
    fi
    
    # Hi·ªÉn th·ªã t√≥m t·∫Øt
    echo -e "\n${PURPLE}üìã T√ìM T·∫ÆT SERVER:${NC}"
    echo -e "   H·ªá ƒëi·ªÅu h√†nh: ${GREEN}$OS_NAME $OS_VERSION${NC}"
    echo -e "   Ki·∫øn tr√∫c: ${GREEN}$ARCH ($ARCH_NAME)${NC}"
    echo -e "   Dung l∆∞·ª£ng tr·ªëng: ${GREEN}$(($AVAILABLE_SPACE/1024/1024))GB${NC}"
    
    if [[ ${#SERVER_WARNINGS[@]} -gt 0 ]]; then
        echo -e "\n${YELLOW}‚ö†Ô∏è  C·∫¢NH B√ÅO:${NC}"
        for warning in "${SERVER_WARNINGS[@]}"; do
            echo -e "   ‚Ä¢ $warning"
        done
    fi
    
    if [[ ${#conflicts[@]} -gt 0 ]]; then
        echo -e "\n${RED}‚ùå XUNG ƒê·ªòT:${NC}"
        for conflict in "${conflicts[@]}"; do
            echo -e "   ‚Ä¢ $conflict"
        done
        echo -e "\n${RED}WPST Panel y√™u c·∫ßu server s·∫°ch (kh√¥ng c√≥ MariaDB/MySQL).${NC}"
        echo -e "${RED}Vui l√≤ng g·ª° c√†i ƒë·∫∑t MariaDB/MySQL tr∆∞·ªõc khi ti·∫øp t·ª•c.${NC}"
        exit 1
    fi
    
    echo -e "\n${GREEN}‚úÖ Server ƒë√£ s·∫µn s√†ng cho vi·ªác c√†i ƒë·∫∑t!${NC}"
}

# X√°c nh·∫≠n c√†i ƒë·∫∑t
confirm_installation() {
    echo -e "\n${BLUE}üöÄ CHU·∫®N B·ªä C√ÄI ƒê·∫∂T WPST PANEL${NC}"
    echo -e "   C√°c d·ªãch v·ª• s·∫Ω ƒë∆∞·ª£c c√†i ƒë·∫∑t:"
    echo -e "   ‚Ä¢ FrankenPHP (Web Server + PHP)"
    echo -e "   ‚Ä¢ MariaDB $MARIADB_VERSION (Database)"
    echo -e "   ‚Ä¢ WPST Panel (Management Tool)"
    echo -e "   ‚Ä¢ SSL t·ª± ƒë·ªông v·ªõi Let's Encrypt"
    
    if [[ ${#SERVER_WARNINGS[@]} -gt 0 ]]; then
        echo -e "\n${YELLOW}‚ö†Ô∏è  L∆∞u √Ω:${NC}"
        for warning in "${SERVER_WARNINGS[@]}"; do
            echo -e "   ‚Ä¢ $warning"
        done
    fi
    
    echo -e "\n${CYAN}B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c c√†i ƒë·∫∑t kh√¥ng? (y/N):${NC} "
    
    # Th·ª≠ ƒë·ªçc t·ª´ terminal, n·∫øu th·∫•t b·∫°i th√¨ t·ª± ƒë·ªông ti·∫øp t·ª•c
    if ! read -r response < /dev/tty 2>/dev/null; then
        echo "y"
        response="y"
    fi
    
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}C√†i ƒë·∫∑t ƒë√£ b·ªã h·ªßy.${NC}"
        exit 0
    fi
    
    echo -e "\n${GREEN}B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t...${NC}\n"
}

# C√†i ƒë·∫∑t dependencies
install_dependencies() {
    progress "C√†i ƒë·∫∑t c√°c g√≥i ph·ª• thu·ªôc..."
    
    # Update package list
    if ! apt update >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t danh s√°ch g√≥i."
    fi
    
    # Install dependencies
    if ! apt install -y curl wget gnupg2 software-properties-common lsb-release ca-certificates apt-transport-https dirmngr >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ c√†i ƒë·∫∑t c√°c g√≥i ph·ª• thu·ªôc."
    fi
    
    success "Dependencies ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t"
}

# L·∫•y phi√™n b·∫£n FrankenPHP m·ªõi nh·∫•t
get_frankenphp_version() {
    progress "L·∫•y th√¥ng tin phi√™n b·∫£n FrankenPHP..."
    
    FRANKENPHP_VERSION=$(curl -s https://api.github.com/repos/php/frankenphp/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
    if [[ -z "$FRANKENPHP_VERSION" ]]; then
        error "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin phi√™n b·∫£n FrankenPHP."
    fi
    
    info "Phi√™n b·∫£n FrankenPHP: $FRANKENPHP_VERSION"
}

# C√†i ƒë·∫∑t FrankenPHP
install_frankenphp() {
    get_frankenphp_version
    
    progress "C√†i ƒë·∫∑t FrankenPHP $FRANKENPHP_VERSION..."
    
    # T·∫°o URL download
    VERSION_NUM=${FRANKENPHP_VERSION#v} # B·ªè ch·ªØ 'v' ƒë·∫ßu
    PACKAGE_NAME="frankenphp_${VERSION_NUM}-1_${ARCH_NAME}.deb"
    DOWNLOAD_URL="https://github.com/php/frankenphp/releases/download/${FRANKENPHP_VERSION}/${PACKAGE_NAME}"
    
    progress "T·∫£i FrankenPHP package..."
    cd /tmp
    if ! wget "$DOWNLOAD_URL" -O "$PACKAGE_NAME" >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ t·∫£i FrankenPHP package."
    fi
    
    progress "C√†i ƒë·∫∑t FrankenPHP package..."
    if ! dpkg -i "$PACKAGE_NAME" >/dev/null 2>&1; then
        progress "S·ª≠a dependencies..."
        apt install -f -y >/dev/null 2>&1 || error "Kh√¥ng th·ªÉ s·ª≠a package dependencies."
    fi
    
    # Ki·ªÉm tra c√†i ƒë·∫∑t
    if ! command -v frankenphp >/dev/null 2>&1; then
        error "C√†i ƒë·∫∑t FrankenPHP th·∫•t b·∫°i."
    fi
    
    success "FrankenPHP ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t"
}

# C√†i ƒë·∫∑t MariaDB
install_mariadb() {
    progress "C√†i ƒë·∫∑t MariaDB $MARIADB_VERSION..."
    
    # Add MariaDB repository
    if ! curl -fsSL https://mariadb.org/mariadb_release_signing_key.asc | gpg --dearmor -o /usr/share/keyrings/mariadb-keyring.gpg >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ t·∫£i MariaDB signing key."
    fi
    
    OS_CODENAME=$(lsb_release -cs)
    
    # X·ª≠ l√Ω ri√™ng cho Ubuntu v√† Debian
    if [[ $OS_NAME == "Ubuntu" ]]; then
        echo "deb [signed-by=/usr/share/keyrings/mariadb-keyring.gpg] https://mariadb.mirror.liquidtelecom.com/repo/$MARIADB_VERSION/ubuntu $OS_CODENAME main" > /etc/apt/sources.list.d/mariadb.list
    else
        echo "deb [signed-by=/usr/share/keyrings/mariadb-keyring.gpg] https://mariadb.mirror.liquidtelecom.com/repo/$MARIADB_VERSION/debian $OS_CODENAME main" > /etc/apt/sources.list.d/mariadb.list
    fi
    
    if ! apt update >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t danh s√°ch g√≥i MariaDB."
    fi
    
    if ! DEBIAN_FRONTEND=noninteractive apt install -y mariadb-server mariadb-client >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ c√†i ƒë·∫∑t MariaDB."
    fi
    
    # Start v√† enable MariaDB
    if ! systemctl start mariadb >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông MariaDB service."
    fi
    
    if ! systemctl enable mariadb >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ enable MariaDB service."
    fi
    
    success "MariaDB ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† kh·ªüi ƒë·ªông"
}

# Secure MariaDB installation
secure_mariadb() {
    progress "C·∫•u h√¨nh b·∫£o m·∫≠t MariaDB..."
    
    # Generate random root password
    DB_ROOT_PASSWORD=$(openssl rand -base64 32)
    
    # Set root password
    if ! mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '$DB_ROOT_PASSWORD';" >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ ƒë·∫∑t m·∫≠t kh·∫©u root cho MariaDB."
    fi
    
    # Remove anonymous users
    if ! mysql -u root -p"$DB_ROOT_PASSWORD" -e "DELETE FROM mysql.user WHERE User='';" >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ x√≥a anonymous users."
    fi
    
    # Remove remote root
    if ! mysql -u root -p"$DB_ROOT_PASSWORD" -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');" >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ x√≥a remote root users."
    fi
    
    # Remove test database
    if ! mysql -u root -p"$DB_ROOT_PASSWORD" -e "DROP DATABASE IF EXISTS test;" >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ x√≥a test database."
    fi
    
    # Reload privileges
    if ! mysql -u root -p"$DB_ROOT_PASSWORD" -e "FLUSH PRIVILEGES;" >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ reload privileges."
    fi
    
    # Save root password
    mkdir -p "$WPST_DIR/config"
    echo "DB_ROOT_PASSWORD=\"$DB_ROOT_PASSWORD\"" > "$WPST_DIR/config/mariadb_root.conf"
    chmod 600 "$WPST_DIR/config/mariadb_root.conf"
    chown root:root "$WPST_DIR/config/mariadb_root.conf"
    
    success "MariaDB ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh b·∫£o m·∫≠t"
}

# T·∫°o c·∫•u tr√∫c th∆∞ m·ª•c
create_directories() {
    progress "T·∫°o c·∫•u tr√∫c th∆∞ m·ª•c..."
    
    if ! mkdir -p "$WPST_DIR"/{bin,lib,templates,config,logs}; then
        error "Kh√¥ng th·ªÉ t·∫°o c·∫•u tr√∫c th∆∞ m·ª•c WPST."
    fi
    
    # T·∫°o th∆∞ m·ª•c /var/www n·∫øu ch∆∞a c√≥
    if ! mkdir -p /var/www; then
        error "Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c /var/www."
    fi
    
    # Set permissions
    if ! chown -R frankenphp:frankenphp /var/www >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ thay ƒë·ªïi owner cho /var/www."
    fi
    
    if ! chmod 755 /var/www; then
        warning "Kh√¥ng th·ªÉ thay ƒë·ªïi permission cho /var/www."
    fi
    
    success "C·∫•u tr√∫c th∆∞ m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫°o"
}

# T·∫°o c·∫•u h√¨nh FrankenPHP
create_frankenphp_config() {
    progress "T·∫°o c·∫•u h√¨nh FrankenPHP..."
    
    # Backup original configs
    if [[ -f /etc/frankenphp/Caddyfile ]]; then
        cp /etc/frankenphp/Caddyfile /etc/frankenphp/Caddyfile_backup
    fi
    
    if [[ -f /etc/frankenphp/php.ini ]]; then
        cp /etc/frankenphp/php.ini /etc/frankenphp/php.ini_backup
    fi
    
    # Create main Caddyfile
    cat > /etc/frankenphp/Caddyfile << 'EOF'
{
	frankenphp {
		max_threads auto
		max_wait_time 5
	}
}

import /var/www/*/Caddyfile
EOF

    # Create optimized php.ini
    cat > /etc/frankenphp/php.ini << 'EOF'
; ########### C·∫§U H√åNH C∆† B·∫¢N ###########
memory_limit = 128M
max_execution_time = 300
max_input_time = 300
default_socket_timeout = 120
date.timezone = Asia/Ho_Chi_Minh

; ########### UPLOAD FILES ###########
upload_max_filesize = 128M
post_max_size = 256M
max_file_uploads = 10
max_input_vars = 20000
file_uploads = On

; ########### OUTPUT & BUFFER ###########
output_buffering = 4096
implicit_flush = Off
zlib.output_compression = On
zlib.output_compression_level = 6

; ########### SESSION ###########
session.save_handler = files
session.save_path = "/tmp"
session.gc_probability = 1
session.gc_divisor = 1000
session.gc_maxlifetime = 1440
session.cookie_httponly = On
session.cookie_secure = Off
session.use_strict_mode = On
session.cookie_samesite = "Lax"

; ########### OPCODE CACHE (QUAN TR·ªåNG) ###########
opcache.enable=1
opcache.memory_consumption=128
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=4000
opcache.max_wasted_percentage=10
opcache.validate_timestamps=1
opcache.revalidate_freq=5
opcache.fast_shutdown=1
opcache.enable_cli=0
opcache.jit=1254
opcache.jit_buffer_size=32M
opcache.save_comments=0
opcache.file_update_protection=2
opcache.huge_code_pages=0
opcache.preload_user = frankenphp

; ########### REALPATH CACHE ###########
realpath_cache_size = 16M
realpath_cache_ttl = 600

; ########### WORDPRESS OPTIMIZATION ###########
disable_functions = exec,passthru,shell_exec,system
expose_php = Off
allow_url_fopen = On
allow_url_include = Off
enable_dl = Off
cgi.fix_pathinfo = 0

; ########### DATABASE ###########
mysqli.max_persistent = 10
mysqli.max_links = 20
mysqli.default_port = 3306
mysqli.reconnect = Off

; ########### PERFORMANCE TUNING ###########
max_input_nesting_level = 64
pcre.backtrack_limit = 1000000
pcre.recursion_limit = 100000

; ########### WORDPRESS SPECIFIC ###########
user_ini.filename = ".user.ini"
user_ini.cache_ttl = 300

; ########### APCU ###########
apc.shm_size = 128M
EOF

    # Set permissions
    chown frankenphp:frankenphp /etc/frankenphp/Caddyfile
    chown frankenphp:frankenphp /etc/frankenphp/php.ini
    chmod 644 /etc/frankenphp/Caddyfile
    chmod 644 /etc/frankenphp/php.ini
    
    success "C·∫•u h√¨nh FrankenPHP ƒë√£ ƒë∆∞·ª£c t·∫°o"
}

# Start services
start_services() {
    progress "Kh·ªüi ƒë·ªông c√°c d·ªãch v·ª•..."
    
    # Ki·ªÉm tra Caddyfile tr∆∞·ªõc khi kh·ªüi ƒë·ªông
    if ! frankenphp validate --config /etc/frankenphp/Caddyfile >/dev/null 2>&1; then
        warning "Caddyfile c√≥ l·ªói, ƒëang s·ª≠a..."
        # T·∫°o l·∫°i Caddyfile v·ªõi c·∫•u h√¨nh ƒë∆°n gi·∫£n
        cat > /etc/frankenphp/Caddyfile << 'EOF'
{
	frankenphp {
		num_threads 0
		max_threads 0
		max_wait_time 10
	}
}

import /var/www/*/Caddyfile
EOF
    fi
    
    # Start FrankenPHP
    if ! systemctl restart frankenphp >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông FrankenPHP service, ƒëang th·ª≠ l·∫°i..."
        sleep 2
        if ! systemctl restart frankenphp >/dev/null 2>&1; then
            error "Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông FrankenPHP service."
        fi
    fi
    
    if ! systemctl enable frankenphp >/dev/null 2>&1; then
        warning "Kh√¥ng th·ªÉ enable FrankenPHP service."
    fi
    
    # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ service kh·ªüi ƒë·ªông
    sleep 3
    
    if systemctl is-active --quiet frankenphp; then
        success "FrankenPHP ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông"
    else
        warning "FrankenPHP service ch∆∞a ho·∫°t ƒë·ªông, nh∆∞ng c√≥ th·ªÉ kh·ªüi ƒë·ªông sau."
    fi
}

# C√†i ƒë·∫∑t WPST script ch√≠nh
install_wpst_script() {
    progress "C√†i ƒë·∫∑t WPST Panel..."
    
    # T·∫°o th∆∞ m·ª•c WPST n·∫øu ch∆∞a c√≥
    if ! mkdir -p "$WPST_DIR"; then
        error "Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c WPST."
    fi
    
    # T·∫£i WPST script t·ª´ GitHub
    if ! curl -fsSL "https://raw.githubusercontent.com/maixuanthuy/wpst/main/src/wpst" -o "$WPST_DIR/wpst" >/dev/null 2>&1; then
        error "Kh√¥ng th·ªÉ t·∫£i WPST script t·ª´ GitHub."
    fi
    
    if ! chmod +x "$WPST_DIR/wpst"; then
        error "Kh√¥ng th·ªÉ c·∫•p quy·ªÅn th·ª±c thi cho WPST script."
    fi
    
    # T·∫°o symlink ƒë·ªÉ c√≥ th·ªÉ ch·∫°y t·ª´ b·∫•t k·ª≥ ƒë√¢u
    if ! ln -sf "$WPST_DIR/wpst" /usr/local/bin/wpst; then
        warning "Kh√¥ng th·ªÉ t·∫°o symlink cho WPST script."
    else
        # Ki·ªÉm tra symlink ƒë√£ ƒë∆∞·ª£c t·∫°o ch∆∞a
        if [[ ! -L /usr/local/bin/wpst ]]; then
            warning "Symlink wpst kh√¥ng t·ªìn t·∫°i sau khi t·∫°o."
        fi
    fi
    
    # T·∫£i th∆∞ m·ª•c lib t·ª´ GitHub
    if ! mkdir -p "$WPST_DIR/lib"; then
        error "Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c lib."
    fi
    
    # T·∫£i c√°c file trong lib
    local lib_files=("adminneo.php" "tinyfilemanager.php" "8g-caddy.snippet")
    for file in "${lib_files[@]}"; do
        if ! curl -fsSL "https://raw.githubusercontent.com/maixuanthuy/wpst/main/src/lib/$file" -o "$WPST_DIR/lib/$file" >/dev/null 2>&1; then
            warning "Kh√¥ng th·ªÉ t·∫£i file $file t·ª´ GitHub."
        fi
    done
    
    # ƒê·∫£m b·∫£o quy·ªÅn cho lib files
    if [[ -d "$WPST_DIR/lib" ]]; then
        if ! chown -R frankenphp:frankenphp "$WPST_DIR/lib"; then
            warning "Kh√¥ng th·ªÉ thay ƒë·ªïi owner cho lib files."
        fi
        
        if ! find "$WPST_DIR/lib" -type f -exec chmod 644 {} \; 2>/dev/null; then
            warning "Kh√¥ng th·ªÉ thay ƒë·ªïi permission cho lib files."
        fi
        
        if ! find "$WPST_DIR/lib" -type d -exec chmod 755 {} \; 2>/dev/null; then
            warning "Kh√¥ng th·ªÉ thay ƒë·ªïi permission cho lib directories."
        fi
    fi
    
    success "WPST Panel ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t"
}

# Ki·ªÉm tra v√† s·ª≠a l·ªói sau c√†i ƒë·∫∑t
post_install_check() {
    progress "Ki·ªÉm tra c√†i ƒë·∫∑t..."
    
    # Ki·ªÉm tra FrankenPHP
    if ! command -v frankenphp >/dev/null 2>&1; then
        error "FrankenPHP kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t ƒë√∫ng c√°ch."
    fi
    
    # Ki·ªÉm tra MariaDB
    if ! command -v mysql >/dev/null 2>&1; then
        error "MariaDB kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t ƒë√∫ng c√°ch."
    fi
    
    # Ki·ªÉm tra WPST script
    if [[ ! -f "$WPST_DIR/wpst" ]]; then
        error "WPST script kh√¥ng t·ªìn t·∫°i."
    fi
    
    if [[ ! -x "$WPST_DIR/wpst" ]]; then
        error "WPST script kh√¥ng c√≥ quy·ªÅn th·ª±c thi."
    fi
    
    # Ki·ªÉm tra symlink
    if [[ ! -L /usr/local/bin/wpst ]]; then
        warning "T·∫°o l·∫°i symlink wpst..."
        ln -sf "$WPST_DIR/wpst" /usr/local/bin/wpst
    fi
    
    # Ki·ªÉm tra th∆∞ m·ª•c /var/www
    if [[ ! -d /var/www ]]; then
        warning "T·∫°o l·∫°i th∆∞ m·ª•c /var/www..."
        mkdir -p /var/www
        chown frankenphp:frankenphp /var/www
        chmod 755 /var/www
    fi
    
    # Ki·ªÉm tra Caddyfile
    if ! frankenphp validate --config /etc/frankenphp/Caddyfile >/dev/null 2>&1; then
        warning "Caddyfile c√≥ l·ªói, ƒëang s·ª≠a..."
        # T·∫°o l·∫°i Caddyfile v·ªõi c·∫•u h√¨nh ƒë∆°n gi·∫£n
        cat > /etc/frankenphp/Caddyfile << 'EOF'
{
	frankenphp {
		num_threads 0
		max_threads 0
		max_wait_time 10
	}
}

import /var/www/*/Caddyfile
EOF
    fi
    
    success "Ki·ªÉm tra c√†i ƒë·∫∑t ho√†n th√†nh"
}

# Hi·ªÉn th·ªã th√¥ng tin ho√†n th√†nh
show_completion_info() {
    echo -e "\n${GREEN}üéâ WPST Panel C√†i ƒê·∫∑t Ho√†n Th√†nh!${NC}\n"
    
    echo -e "${BLUE}‚úÖ Th√¥ng Tin H·ªá Th·ªëng:${NC}"
    echo -e "   FrankenPHP: $FRANKENPHP_VERSION ƒë√£ c√†i ƒë·∫∑t & ch·∫°y"
    echo -e "   MariaDB: $MARIADB_VERSION ƒë√£ c√†i ƒë·∫∑t & b·∫£o m·∫≠t"
    echo -e "   SSL: T·ª± ƒë·ªông v·ªõi Let's Encrypt"
    echo -e "   Panel Location: $WPST_DIR"
    echo -e "   Sites Directory: $SITES_DIR"
    
    echo -e "\n${BLUE}üìã B∆∞·ªõc Ti·∫øp Theo:${NC}"
    echo -e "   1. Ch·∫°y: ${GREEN}wpst${NC} (ƒë·ªÉ m·ªü panel)"
    echo -e "   2. T·∫°o website ƒë·∫ßu ti√™n"
    echo -e "   3. C·∫•u h√¨nh firewall trong panel"
    
    echo -e "\n${BLUE}üîê Th√¥ng Tin Quan Tr·ªçng:${NC}"
    echo -e "   M·∫≠t kh·∫©u MariaDB root ƒë√£ ƒë∆∞·ª£c l∆∞u an to√†n"
    echo -e "   Log c√†i ƒë·∫∑t: $LOG_FILE"
    
    echo -e "\n${GREEN}C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng WPST Panel!${NC}"
}

# Main installation process
main() {
    # Trap ƒë·ªÉ handle Ctrl+C
    trap 'echo -e "\n${RED}ƒê√£ h·ªßy c√†i ƒë·∫∑t.${NC}"; exit 1' INT TERM
    
    # Debug info
    echo -e "${YELLOW}[DEBUG]${NC} Script ƒëang ch·∫°y v·ªõi PID: $$" >&2
    echo -e "${YELLOW}[DEBUG]${NC} Terminal t∆∞∆°ng t√°c: $([[ -t 0 ]] && echo "C√≥" || echo "Kh√¥ng")" >&2
    
    echo -e "${BLUE}"
    cat << 'EOF'
 ########                                         
##########        ##########       ###########    
###########      ############     ############### 
###########     ##############   #################
 ###########    ###############  #################
 ###########    ###############  ######      #####
  ###########   ######## ####### ######      #####
  ###########  ######### ####### ###### ##########
   ########### ######### ####### ###### ######### 
    ########## #########  ###### ###### #1.0.0   
    ########## ########   #############           
     ##################    ###########            
      ################      #########             
       ##############         ####                
          #########
EOF
    echo -e "${NC}\n"
    
    log "B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t WPST Panel..."
    
    # Th·ª±c hi·ªán t·ª´ng b∆∞·ªõc v·ªõi error handling
    check_root
    detect_system
    check_server_status
    confirm_installation
    
    echo -e "${CYAN}üîÑ ƒêang c√†i ƒë·∫∑t...${NC}\n"
    
    install_dependencies
    install_frankenphp
    install_mariadb
    secure_mariadb
    create_directories
    create_frankenphp_config
    start_services
    install_wpst_script
    post_install_check
    
    show_completion_info
    
    log "C√†i ƒë·∫∑t ho√†n th√†nh th√†nh c√¥ng!"
}

# Ch·∫°y script ch√≠nh
main
